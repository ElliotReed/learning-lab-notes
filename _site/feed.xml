<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/learning-lab-notes/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/learning-lab-notes/" rel="alternate" type="text/html" /><updated>2023-12-11T16:16:24-07:00</updated><id>http://localhost:4000/learning-lab-notes/feed.xml</id><title type="html">Learning Lab Notes</title><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/learning-lab-notes/jekyll/update/2023/12/09/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-12-09T14:09:48-07:00</published><updated>2023-12-09T14:09:48-07:00</updated><id>http://localhost:4000/learning-lab-notes/jekyll/update/2023/12/09/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/jekyll/update/2023/12/09/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1"># =&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">Ruby</title><link href="http://localhost:4000/learning-lab-notes/developer/2023/12/09/ruby.html" rel="alternate" type="text/html" title="Ruby" /><published>2023-12-09T00:00:00-07:00</published><updated>2023-12-09T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/developer/2023/12/09/ruby</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/developer/2023/12/09/ruby.html"><![CDATA[<p><a href="https://www.ruby-lang.org/en/">https://www.ruby-lang.org/en/</a></p>

<p><img src="https://www.ruby-lang.org/images/header-ruby-logo.png" alt="ruby" /><br /><strong>Ruby</strong></p>

<h2 id="setup">Setup</h2>

<ul>
  <li>
    <p>Windows installation</p>

    <p>Go to <a href="https://rubyinstaller.org/">https://rubyinstaller.org/</a> and use the installer.</p>

    <p>After installation run these commands:</p>

    <pre><code class="language-node">ruby -v
</code></pre>

    <pre><code class="language-node">gem -v
</code></pre>
  </li>
</ul>

<p>If those are working, congratulations! Ruby is installed.</p>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[https://www.ruby-lang.org/en/]]></summary></entry><entry><title type="html">Markdown</title><link href="http://localhost:4000/learning-lab-notes/developer/2023/12/09/markdown.html" rel="alternate" type="text/html" title="Markdown" /><published>2023-12-09T00:00:00-07:00</published><updated>2023-12-09T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/developer/2023/12/09/markdown</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/developer/2023/12/09/markdown.html"><![CDATA[<p><a href="https://www.markdownguide.org">https://www.markdownguide.org</a></p>

<p>Markdown Cheat Sheet</p>

<p>A quick reference to the Markdown syntax.
Overview</p>

<p>This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can’t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax.
Basic Syntax</p>

<p>These are the elements outlined in John Gruber’s original design document. All Markdown applications support these elements.</p>

<h2 id="basic-syntax">Basic Syntax</h2>

<table>
  <thead>
    <tr>
      <th>Element</th>
      <th>Markdown Syntax</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Heading</td>
      <td># H1 <br /> ## H2 <br /> ### H3</td>
    </tr>
    <tr>
      <td>Bold</td>
      <td><strong>bold text</strong></td>
    </tr>
    <tr>
      <td>Italic</td>
      <td><em>italicized text</em></td>
    </tr>
    <tr>
      <td>Blockquote</td>
      <td>&gt; blockquote</td>
    </tr>
    <tr>
      <td>Ordered List</td>
      <td>1. First item <br /> 2. Second item <br /> 3. Third item</td>
    </tr>
    <tr>
      <td>Unordered List</td>
      <td>- First item <br /> - Second item <br /> - Third item</td>
    </tr>
    <tr>
      <td>Code</td>
      <td><code class="language-plaintext highlighter-rouge">code</code></td>
    </tr>
    <tr>
      <td>Horizontal Rule</td>
      <td>—</td>
    </tr>
    <tr>
      <td>Link</td>
      <td>[title](<a href="https://www.example.com">https://www.example.com</a>)</td>
    </tr>
    <tr>
      <td>Image</td>
      <td>![alt text](image.jpg)</td>
    </tr>
  </tbody>
</table>

<h2 id="extended-syntax">Extended Syntax</h2>

<p>These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.
|Element | Markdown Syntax |
| ———- | ———– |
|Table  | | Syntax | Description | <br /> | ———– |  ———– | <br /> | Header | Title | <br /> | Paragraph | Text | |
|Fenced Code Block |  ``` <br /> { <br />   “firstName”: “John”, <br />   “lastName”: “Smith”, <br />   “age”: 25 <br /> } <br /> ``` |
|Footnote | Here’s a sentence with a footnote. [^1] <br /> [^1]: This is the footnote.|
|Heading ID | ### My Great Heading {#custom-id}|
|Definition List | term <br />: definition|
|Strikethrough | ~~The world is flat.~~|
|Task List | - [x] Write the press release <br /> - [ ] Update the website <br /> - [ ] Contact the media|
|Emoji <br /> (see also Copying and Pasting Emoji) | That is so funny! : joy :|
|Highlight | I need to highlight these ==very important words==.
|Subscript | H~2~O|
|Superscript  X^2^|</p>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[https://www.markdownguide.org]]></summary></entry><entry><title type="html">Django</title><link href="http://localhost:4000/learning-lab-notes/developer/2023/12/08/django.html" rel="alternate" type="text/html" title="Django" /><published>2023-12-08T00:00:00-07:00</published><updated>2023-12-08T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/developer/2023/12/08/django</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/developer/2023/12/08/django.html"><![CDATA[<h2 id="setup">setup</h2>

<h3 id="pipenv">pipenv</h3>

<ol>
  <li>
    <p>To include in project folder, first create .venv folder at project root</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> mkdir .venv
</code></pre></div>    </div>
  </li>
  <li>
    <p>pip install pipenv (otherwise, it will load environment into ~ c: user profile)</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pip install pipenv
</code></pre></div>    </div>
  </li>
  <li>
    <p>run</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pipenv shell
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="django">django</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pipenv install django
</code></pre></div></div>

<p>create project in folder, creates config in root directory (use dot)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>django-admin startproject config .
</code></pre></div></div>

<h3 id="packages">packages</h3>

<h4 id="main">main</h4>

<ul>
  <li>
    <p>django</p>
  </li>
  <li>
    <p><a href="https://pillow.readthedocs.io/en/stable/">Pillow</a> (for file uplaods)</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  pipenv install pillow
</code></pre></div>    </div>
  </li>
  <li>
    <p><a href="http://whitenoise.evans.io/en/stable/">WhiteNoise</a> (for serving files)</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  pipenv install whitenoise
</code></pre></div>    </div>

    <p>add to settings.py</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  "whitenoise.runserver_nostatic",  (add to INSTALLED_APPS after django apps)
  "whitenoise.middleware.WhiteNoiseMiddleware",  (add to MIDDLEWARE after django.contrib.sessions.middleware.SessionMiddleware)
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="api">api</h4>

<ul>
  <li>django-rest-framework</li>
  <li>django-cors-headers</li>
</ul>

<h4 id="database">database</h4>

<ul>
  <li>
    <p>mysql</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pipenv install mysqlclient
</code></pre></div>    </div>
  </li>
  <li>
    <p>sqlite3</p>

    <ol>
      <li>copy sqlite3.exe to folder</li>
      <li>
        <p>run</p>

        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> sqlite3 shell
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
</ul>

<h4 id="environment-variables">environment variables</h4>

<ol>
  <li>
    <p>install <a href="https://pypi.org/project/python-decouple/">Decouple</a></p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pipenv install python-decouple
</code></pre></div>    </div>
  </li>
  <li>create .env in main project folder (same as settings)</li>
  <li>
    <p>in settings.py</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from decouple import config

SECRET_KEY = config('SECRET_KEY')
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="static-folders">Static folders</h3>

<ul>
  <li>create static directory at root</li>
  <li>
    <p>subdirectories and files</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  static/css
  static/css/base.css
  static/images
  static/js
  static/js/app.js
</code></pre></div>    </div>
  </li>
  <li>
    <p>add to settings.py under STATIC_URL</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  STATIC_URL = "/static/"
  STATICFILES_DIRS = [BASE_DIR / "static"]
  STATIC_ROOT = STATIC_ROOT = BASE_DIR / "staticfiles"
  STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
</code></pre></div>    </div>
  </li>
  <li>
    <p>for production, run</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  py manage.py collectstatic
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="media-folders">Media folders</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/media
</code></pre></div></div>

<ul>
  <li>
    <p>add to settings.py</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  MEDIA_URL = "media/"
  MEDIA_ROOT = BASE_DIR / "media/"
</code></pre></div>    </div>
  </li>
  <li>
    <p>add to root urls file</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="templates">Templates</h3>

<ul>
  <li>
    <p>add /templates</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  templates/base.html
  templates/navbar.html
</code></pre></div>    </div>
  </li>
  <li>
    <p>in settings, in TEMPLATES in DIRS add</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> BASE_DIR / 'templates'
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="deployment">Deployment</h2>

<ol>
  <li>Setup Python App</li>
  <li>
    <p>In setup</p>

    <ul>
      <li>
        <p>Select Python Version 3.9.12?</p>
      </li>
      <li>
        <p>Application Root is the directory where you will place the code files of your Django project.
 Make sure that it is a different folder than your domain root.</p>
      </li>
      <li>
        <p>Application URL is the domain or subdomain where your app will run</p>
      </li>
      <li>
        <p>In the Application Startup File, type “passenger_wsgi.py”</p>
      </li>
      <li>
        <p>In the Application Entry Point, type “application”</p>
      </li>
    </ul>
  </li>
  <li>Setup Database</li>
  <li>Upload project</li>
  <li>
    <p>Edit the passenger_wsgi.py file</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> delete all, then add
 from [project folder containing settings.py].wsgi import application
</code></pre></div>    </div>
  </li>
  <li>
    <p>Edit settings.py</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ALLOWED_HOSTS, DEBUG
</code></pre></div>    </div>
  </li>
  <li>
    <p>In virtual env</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pip install pipenv
 pipenv sync
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[setup]]></summary></entry><entry><title type="html">Github</title><link href="http://localhost:4000/learning-lab-notes/github/" rel="alternate" type="text/html" title="Github" /><published>2023-12-07T00:00:00-07:00</published><updated>2023-12-07T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/github</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/github/"><![CDATA[<h2 id="installation">installation</h2>

<h2 id="cli">cli</h2>

<h3 id="usage">usage</h3>

<ul>
  <li>
    <p>gh repo</p>

    <ul>
      <li>
        <p>create interactively</p>

        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  gh repo create
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h2 id="github-pages">github pages</h2>

<p>uses <a href="https://jekyllrb.com/">jekyll</a></p>

<h3 id="setup">setup</h3>

<ul>
  <li>
    <p>Settings&gt;Pages</p>

    <ul>
      <li>“Deploy from a branch” main</li>
      <li>Click the Save button.</li>
    </ul>
  </li>
  <li>
    <p>create “./_config.yml”</p>

    <p>example</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  theme: minima
  title: dev notes
  author: elliot reed
  description: notes
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="site">site</h3>

<ul>
  <li>create “./index.md” or “./README.md”
    <ul>
      <li>add homepage content</li>
    </ul>
  </li>
  <li>jekyll, create blog with files named “_posts/YYYY-MM-DD-title.md”</li>
  <li>
    <p>include title and date</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: "YOUR-TITLE"
date: YYYY-MM-DD
---
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[installation]]></summary></entry><entry><title type="html">Tanstack React Query</title><link href="http://localhost:4000/learning-lab-notes/developer/2023/12/07/react-query.html" rel="alternate" type="text/html" title="Tanstack React Query" /><published>2023-12-07T00:00:00-07:00</published><updated>2023-12-07T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/developer/2023/12/07/react-query</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/developer/2023/12/07/react-query.html"><![CDATA[<h2 id="library">library</h2>

<p><a href="https://tanstack.com/query/latest">https://tanstack.com/query/latest</a></p>

<h2 id="installation">installation</h2>

<ul>
  <li>v3</li>
</ul>

<pre><code class="language-node">npm i react-query react-query-devtools
</code></pre>

<ul>
  <li>v4</li>
</ul>

<pre><code class="language-node">npm i @tanstack/react-query @tanstack/react-query-devtools
</code></pre>

<h2 id="setup">setup</h2>

<ul>
  <li>wrap <em>provider</em> at highest use level (probably around &lt;App/&gt;)</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">QueryClient</span><span class="p">,</span> <span class="nx">QueryClientProvider</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@tanstack/react-query</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">queryClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">QueryClient</span><span class="p">();</span>

<span class="o">&lt;</span><span class="nx">QueryClientProvider</span> <span class="nx">client</span><span class="o">=</span><span class="p">{</span><span class="nx">queryClient</span><span class="p">}</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">App</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="sr">/QueryClientProvider</span><span class="err">&gt;
</span></code></pre></div></div>

<h3 id="devtools">devtools</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">ReactQueryDevtools</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@tanstack/react-query-devtools</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p>added next to &lt;App /&gt;</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">QueryClientProvider</span> <span class="nx">client</span><span class="o">=</span><span class="p">{</span><span class="nx">queryClient</span><span class="p">}</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">App</span> <span class="o">/&gt;</span>
  <span class="o">&lt;</span><span class="nx">ReactQueryDevtools</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="sr">/QueryClientProvider</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="usage">usage</h2>

<ul>
  <li>useQuery to get, useMutation to post</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useQuery</span><span class="p">,</span> <span class="nx">useMutation</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@tanstack/react-query</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="usequery">useQuery()</h3>

<p>@params</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="nl">queryKey</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">key</span><span class="dl">"</span><span class="p">],</span>
  <span class="nx">queryFn</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nb">Promise</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="usemutation">useMutation()</h3>

<p>@params</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="nl">mutationFn</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nb">Promise</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[library]]></summary></entry><entry><title type="html">Jekyll</title><link href="http://localhost:4000/learning-lab-notes/developer/2023/12/07/jekyll.html" rel="alternate" type="text/html" title="Jekyll" /><published>2023-12-07T00:00:00-07:00</published><updated>2023-12-07T00:00:00-07:00</updated><id>http://localhost:4000/learning-lab-notes/developer/2023/12/07/jekyll</id><content type="html" xml:base="http://localhost:4000/learning-lab-notes/developer/2023/12/07/jekyll.html"><![CDATA[<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://jekyllrb.com/">https://jekyllrb.com/</a></li>
  <li><a href="https://mademistakes.com/">https://mademistakes.com/</a></li>
  <li><a href="https://mademistakes.com/mastering-jekyll/">https://mademistakes.com/mastering-jekyll/</a></li>
  <li><a href="https://mademistakes.com/mastering-jekyll/site-url-baseurl/">https://mademistakes.com/mastering-jekyll/site-url-baseurl/</a></li>
</ul>

<h2 id="setup">Setup</h2>

<p>After installing Ruby (follow this <a href="/learning-lab-notes/developer/2023/12/09/ruby.html">link </a> for instructions):</p>

<p>Install jekyll and bundle</p>

<pre><code class="language-node">  gem install jekyll bundler
</code></pre>

<p>Create a new site</p>

<pre><code class="language-node">  jekyll new [name or .]
</code></pre>

<p>On first run</p>

<pre><code class="language-node">  bundle exec jekyll serve
</code></pre>

<p>Subsequent runs, just</p>

<pre><code class="language-node">  jekyll server
</code></pre>

<h2 id="config">Config</h2>

<ul>
  <li>
    <p>_config.yml</p>

    <p>example</p>
  </li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">learning lab notes</span>
<span class="na">author</span><span class="pi">:</span> <span class="s">elliot reed</span>
<span class="na">email</span><span class="pi">:</span> <span class="s">&lt;dev@elliotreed.net&gt;</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span> <span class="c1"># this means to ignore newlines until "baseurl:"</span>
  <span class="s">A personal note site.</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/learning-lab-notes"</span> <span class="c1"># the subpath of your site, e.g. /blog</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">&lt;https://github.com/ElliotReed&gt;"</span> <span class="c1"># the base hostname &amp; protocol for your site, e.g. &lt;http://example.com&gt;</span>
<span class="c1"># twitter_username: jekyllrb</span>
<span class="c1"># github_username:  jekyll</span>

<span class="c1"># Build settings</span>

<span class="na">theme</span><span class="pi">:</span> <span class="s">minima</span>
<span class="na">plugins</span><span class="pi">:</span>

<span class="pi">-</span> <span class="s">jekyll-feed</span>
</code></pre></div></div>

<ul>
  <li>
    <p>Use index.md for entry</p>

    <ul>
      <li>add homepage content</li>
    </ul>
  </li>
  <li>
    <p>Add README.md</p>

    <ul>
      <li>for github</li>
    </ul>
  </li>
</ul>

<h2 id="blog-files">Blog files</h2>

<ul>
  <li>create blog with files named “_posts/YYYY-MM-DD-title.md”</li>
  <li>include title and date (other keys such as layout and categories also)</li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">YOUR-TITLE"</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-MM-DD</span>
<span class="na">categories</span><span class="pi">:</span> <span class="s">developer</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="themes">Themes</h2>

<h3 id="minima">minima</h3>

<p><a href="https://github.com/jekyll/minima">https://github.com/jekyll/minima</a></p>

<p>default theme for jekyll</p>

<p>To have your CSS overrides in sync with upstream changes released in future versions, you can collect all your overrides for the Sass variables and mixins inside a sass file placed at _sass/minima/custom-variables.scss and all other overrides inside a sass file placed at path_sass/minima/custom-styles.scss.</p>]]></content><author><name></name></author><category term="developer" /><summary type="html"><![CDATA[Resources]]></summary></entry></feed>